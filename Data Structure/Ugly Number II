public class Solution {
    public int NthUglyNumber(int n) {
        HashSet<long> visited = new HashSet<long>();
        PriorityQueue<long, long> heap = new PriorityQueue<long, long>();
        heap.Enqueue(1L, 1L);
        visited.Add(1L);

        int[] primes = {2, 3, 5};

        long currentUgly = 1L;
        for (int i = 0; i < n; i++) {
            currentUgly = heap.Dequeue();

            foreach (int prime in primes) {
                long nextUgly = currentUgly * prime;

                if (!visited.Contains(nextUgly)) {
                    visited.Add(nextUgly);
                    heap.Enqueue(nextUgly, nextUgly);
                }
            }
        }
        
        return (int)currentUgly;
    }
}
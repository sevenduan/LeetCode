public class Solution {
    public int LargestRectangleArea(int[] heights) {
        if (heights == null || heights.Length == 0)
            return 0;
        
        Stack<int> stack = new Stack<int>();
        int n = heights.Length;
        int max = 0;

        for (int i = 0; i <= n; i++) {
            int current = (i == n) ? -1 : heights[i];
            while (stack.Count > 0 && current < heights[stack.Peek()]) {
                var h = heights[stack.Pop()];
                int w = (stack.Count == 0) ? i : i - stack.Peek() - 1;
                int area = h * w;
                max = Math.Max(max, area);
            }

            stack.Push(i);            
        }

        return max;
    }
}`
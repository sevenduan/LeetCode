public class MyStack {
    private Queue<int> queue;
    private Queue<int> queueBuffer;
    public MyStack() {
        queue = new Queue<int>();
        queueBuffer = new Queue<int>();
    }
    
    public void Push(int x) {
        queue.Enqueue(x);
    }
    
    public int Pop() {
        MoveItems();
        var item = queue.Dequeue();
        SwapQueue();
        return item;
    }

    private void MoveItems() {
        while (queue.Count > 1) {
            queueBuffer.Enqueue(queue.Dequeue());
        }
    }

    private void SwapQueue() {
        var temp = queue;
        queue = queueBuffer;
        queueBuffer = temp;
    }
    
    public int Top() {
        var item = Pop();
        queue.Enqueue(item);
        return item;
    }
    
    public bool Empty() {
        return queue.Count == 0;
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.Push(x);
 * int param_2 = obj.Pop();
 * int param_3 = obj.Top();
 * bool param_4 = obj.Empty();
 */
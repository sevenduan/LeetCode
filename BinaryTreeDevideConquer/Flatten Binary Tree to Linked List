/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public void Flatten(TreeNode root) {
        FlattenHelper(root);
    }

    private TreeNode FlattenHelper(TreeNode node) {
        if (node == null)
            return null;

        var leftLast = FlattenHelper(node.left);
        var rightLast = FlattenHelper(node.right);

        if (leftLast != null) {
            leftLast.right = node.right;
            node.right = node.left;
            node.left = null;
        }

        if (rightLast != null)
            return rightLast;
        
        if (leftLast != null)
            return leftLast;
        
        return node;
    }
}
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<string> BinaryTreePaths(TreeNode root) {
        List<string> paths = new List<string>();

        if (root == null)
            return paths;
        
        var leftPaths =  BinaryTreePaths(root.left);
        var rightPaths = BinaryTreePaths(root.right);

        foreach(var path in leftPaths) {
            paths.Add(root.val + "->" + path);
        }

        foreach(var path in rightPaths) {
            paths.Add(root.val + "->" + path);
        }
        
        if (paths.Count == 0) {
            paths.Add("" + root.val);
        }
        
        return paths;
    }
}
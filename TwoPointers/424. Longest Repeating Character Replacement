public class Solution {
    public int CharacterReplacement(string s, int k) {
        if (s == null || s.Length == 0)
            return 0;

        int n = s.Length;
        int j = 0;
        int maxFreq = 0;
        int count = 0;
        int answer = 0;
        
        Dictionary<char, int> counter = new Dictionary<char, int>();
        for (int i = 0; i < n; i++) {
            while (j < n && j - i - maxFreq <= k ) {
                count = counter.GetValueOrDefault(s[j]) + 1;
                counter[s[j]] = count;

                maxFreq = Math.Max(maxFreq, count);
                j++;
            }
            
            if (j - i - maxFreq > k) {
                answer = Math.Max(answer, j - i - 1);
            }
            else {
                answer = Math.Max(answer, j - i);
            }

            count = counter[s[i]] - 1;
            counter[s[i]] = count;
        }

        return answer;
    }
}
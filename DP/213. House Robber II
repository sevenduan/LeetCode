public class Solution {
    public int Rob(int[] nums) {        
        if (nums == null || nums.Length == 0)
            return 0;
        
        if (nums.Length == 1)
            return nums[0];
        
        if (nums.Length == 2)
            return Math.Max(nums[0], nums[1]);

        int n = nums.Length;

        return Math.Max(RobHelper(nums, 0, n - 2), RobHelper(nums, 1, n - 1));
    }

    private int RobHelper(int[] nums, int start, int end) {
        int[] dp = new int[3];
        dp[start] = nums[start];
        dp[start + 1] = Math.Max(dp[start], nums[start + 1]);

        for (int i = start + 2; i <= end; i++) {
            dp[i % 3] = Math.Max(dp[(i - 1) % 3], dp[(i - 2) % 3] + nums[i]);
        }

        return dp[end % 3];
    }
}

------------------
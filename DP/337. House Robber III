/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public int Rob(TreeNode root) {
        var res = Dfs(root);
        return Math.Max(res[0], res[1]);
    }

    private int[] Dfs(TreeNode root) {
        if (root == null)
            return new int[] {0, 0};
        
        var left = Dfs(root.left);
        var right = Dfs(root.right);

        int[] dp = new int[2];
        //  0 no choose
        //  1 choose root
        dp[0] = Math.Max(left[0], left[1]) + Math.Max(right[0], right[1]);
        dp[1] =  root.val + left[0] + right[0];

        return dp;
    }
}
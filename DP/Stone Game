using System;
using System.Collections;
using System.Collections.Generic;

namespace lintcode
{
    class Solution {
        /**
         * @param a: An integer array
         * @return: An integer
         */
        public int StoneGame(int[] a) {
            // write your code here
            if (a == null || a.Length == 0)
                return 0;
            
            int n = a.Length;
            int[] prefixSum = new int[n + 1];
            for (int i = 0; i < n; i++) {
                prefixSum[i + 1] = prefixSum[i] + a[i];
            }

            int[,] dp = new int[n, n];
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    dp[i, j] = int.MaxValue;
                }
                dp[i, i] = 0;
            }

            for (int len = 2; len < n + 1; len++) {
                for (int i = 0; i < n - len + 1; i++) {
                    int j = i + len - 1;
                    for (int k = i; k < j; k++) {
                        int cost = prefixSum[j + 1] - prefixSum[i];
                        dp[i, j] = Math.Min(
                            dp[i, j],
                            dp[i, k] + dp[k + 1, j] + cost
                        );
                    }
                }
            }
            /*
            for (int i = n - 1; i >= 0; i--) {
                for (int j = i + 1; j < n; j++) {
                    dp[i, j] = int.MaxValue;
                    int cost = prefixSum[j + 1] - prefixSum[i];
                    for (int k = i; k < j; k++) {
                        dp[i, j] = Math.Min(
                            dp[i, j], 
                            dp[i, k] + dp[k + 1, j] + cost
                        );
                    }
                }
            }*/

            return dp[0, n - 1];
        }
    }
}
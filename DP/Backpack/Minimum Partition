using System;
using System.Collections;
using System.Collections.Generic;

namespace lintcode
{
    class Solution {
        /**
         * @param nums: the given array
         * @return: the minimum difference between their sums 
         */
        public int FindMin(int[] nums) {
            // write your code here
            if (nums == null || nums.Length == 0)
                return 0;

            int n = nums.Length;
            if (n == 1)
                return nums[0];
            
            int sum = 0;
            foreach(var num in nums) {
                sum += num;
            }

            int target = sum / 2;

            // dp find dp[i][target];
            bool[,] dp = new bool[n + 1, target + 1];

            dp[0, 0] = true;

            for (int i = 1; i <= n; i++) {
                for (int j = 0; j <= target; j++) {
                    if (j >= nums[i - 1]) {
                        dp[i, j] = dp[i - 1, j] || dp[i - 1, j - nums[i - 1]];
                    } else {
                        dp[i, j] = dp[i - 1, j];
                    }
                }
            }

            for (int v = target; v >= 0; v--) {
                if (dp[n, v])
                    return Math.Abs(sum - (v << 1));
            }

            return sum;
        }
    }
}
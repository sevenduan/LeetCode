using System;
using System.Collections;
using System.Collections.Generic;

namespace lintcode
{
    class Solution {
        /**
         * @param stations: an integer array
         * @param k: an integer
         * @return: the smallest possible value of D
         */
        public double MinmaxGasDist(int[] stations, int k) {
            // Write your code here
            if (stations == null || stations.Length == 0)
                return 0;
            
            int count = stations.Length;
            int N = stations.Length;
            double left = 0;
            double right = stations[N - 1] - stations[0];  //init

            while (right - left > 1e-6) {
                double mid = (right + left) / 2;

                count = 0;
                for (int i = 0; i < N - 1; i++)
                    count += (int)Math.Ceiling((double)(stations[i + 1] - stations[i]) / mid) - 1;    // Count additional gas stations needed
            
                if (count > k) {
                    left = mid;
                }
                else {
                    right = mid;
                }
            }
            return right;

        }
    }
}
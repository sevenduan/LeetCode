public class Solution {
    public string LongestPalindrome(string s) {
        if (s == null || s.Length == 0) {
            return "";
        }
                
        int start = 0, len = 0, longest = 0;


        for (int i = 0; i < s.Length; i++) {
            //center enumeration
            len = ExpandAroundCenter(s, i, i);
            if (len > longest) {
                longest = len;
                start = i - len / 2;
            }
            
            len = ExpandAroundCenter(s, i, i + 1);
            if (len > longest) {
                longest = len;
                start = i - len / 2 + 1;
            }
        }
        
        return s.Substring(start, longest); 
    }

    private int ExpandAroundCenter(String s, int left, int right) {
        int len = 0;
        while (left >= 0 && right < s.Length) {
            if (s[left] != s[right]) {
                break;
            }
            len += left == right ? 1 : 2;
            left--;
            right++;
        }
        
        return len;
    }
}
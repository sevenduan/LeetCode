/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class MergeKLists {
    public ListNode MergeKLists(ListNode[] lists) {
        if (lists == null || lists.Length == 0)
            return null;

        var minHeap = new PriorityQueue<ListNode, int>();
        
        foreach(var list in lists)
        {
            if (list != null)
                minHeap.Enqueue(list, list.val);
        }

        ListNode dummy = new ListNode(0);
        ListNode current = dummy;

        while (minHeap.Count > 0)
        {
            var element = minHeap.Dequeue();
            current.next = element;
            current = current.next;
            if (element.next != null)
            {
                minHeap.Enqueue(element.next, element.next.val);
            }

        }

        return dummy.next;
    }
}